rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if user is participant in chat
    function isParticipant(chatId) {
      return isSignedIn() &&
             request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
    }

    // Users collection
    match /users/{userId} {
      // Anyone can read user profiles (needed for looking up users by email)
      allow read: if isSignedIn();

      // Users can only create their own document
      allow create: if isSignedIn() && request.auth.uid == userId;

      // Users can only update their own document
      allow update: if isSignedIn() && request.auth.uid == userId;

      // Users can only delete their own document
      allow delete: if isSignedIn() && request.auth.uid == userId;
    }

    // Chats collection
    match /chats/{chatId} {
      // Allow read if user is a participant
      allow read: if isSignedIn() && request.auth.uid in resource.data.participants;

      // Allow create if user is in the participants list
      allow create: if isSignedIn() &&
                      request.auth.uid in request.resource.data.participants;

      // Allow update if user is a participant (includes adding/removing participants)
      allow update: if isSignedIn() &&
                      (request.auth.uid in resource.data.participants ||
                       request.auth.uid in request.resource.data.participants);

      // Allow delete if user created the chat
      allow delete: if isSignedIn() && resource.data.createdBy == request.auth.uid;

      // Messages subcollection
      match /messages/{messageId} {
        // Allow read if parent chat is accessible
        allow read: if isParticipant(chatId);

        // Allow create if user is participant and is the sender
        allow create: if isParticipant(chatId) &&
                        isSignedIn() &&
                        request.resource.data.senderId == request.auth.uid;

        // Allow update if user is participant (for read receipts, etc)
        allow update: if isParticipant(chatId);

        // Allow delete if user is the sender
        allow delete: if isParticipant(chatId) &&
                        isSignedIn() &&
                        resource.data.senderId == request.auth.uid;
      }
    }
  }
}
